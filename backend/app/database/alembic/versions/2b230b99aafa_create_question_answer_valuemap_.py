"""create Question, Answer, ValueMap, ValueScore models

Revision ID: 2b230b99aafa
Revises: 00c99eacfe01
Create Date: 2025-10-25 03:20:28.126611

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2b230b99aafa'
down_revision: Union[str, Sequence[str], None] = '00c99eacfe01'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question_type', sa.String(length=50), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('categories_ko', sa.JSON(), nullable=True),
    sa.Column('categories_en', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_questions_id'), 'questions', ['id'], unique=False)
    op.create_table('value_maps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('score_0', sa.Integer(), nullable=False),
    sa.Column('score_1', sa.Integer(), nullable=False),
    sa.Column('score_2', sa.Integer(), nullable=False),
    sa.Column('score_3', sa.Integer(), nullable=False),
    sa.Column('score_4', sa.Integer(), nullable=False),
    sa.Column('score_5', sa.Integer(), nullable=False),
    sa.Column('score_6', sa.Integer(), nullable=False),
    sa.Column('count_0', sa.Integer(), nullable=False),
    sa.Column('count_1', sa.Integer(), nullable=False),
    sa.Column('count_2', sa.Integer(), nullable=False),
    sa.Column('count_3', sa.Integer(), nullable=False),
    sa.Column('count_4', sa.Integer(), nullable=False),
    sa.Column('count_5', sa.Integer(), nullable=False),
    sa.Column('count_6', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('personality_insight', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_value_maps_id'), 'value_maps', ['id'], unique=False)
    op.create_table('answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_answers_id'), 'answers', ['id'], unique=False)
    op.create_index(op.f('ix_answers_question_id'), 'answers', ['question_id'], unique=True)
    op.create_table('value_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('answer_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=64), nullable=False),
    sa.Column('value', sa.String(length=80), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('intensity', sa.Float(), nullable=False),
    sa.Column('polarity', sa.Integer(), nullable=False),
    sa.Column('evidence_quotes', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['answers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_value_scores_answer_id'), 'value_scores', ['answer_id'], unique=False)
    op.create_index(op.f('ix_value_scores_id'), 'value_scores', ['id'], unique=False)
    op.create_index(op.f('ix_value_scores_question_id'), 'value_scores', ['question_id'], unique=False)
    op.create_index(op.f('ix_value_scores_user_id'), 'value_scores', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_value_scores_user_id'), table_name='value_scores')
    op.drop_index(op.f('ix_value_scores_question_id'), table_name='value_scores')
    op.drop_index(op.f('ix_value_scores_id'), table_name='value_scores')
    op.drop_index(op.f('ix_value_scores_answer_id'), table_name='value_scores')
    op.drop_table('value_scores')
    op.drop_index(op.f('ix_answers_question_id'), table_name='answers')
    op.drop_index(op.f('ix_answers_id'), table_name='answers')
    op.drop_table('answers')
    op.drop_index(op.f('ix_value_maps_id'), table_name='value_maps')
    op.drop_table('value_maps')
    op.drop_index(op.f('ix_questions_id'), table_name='questions')
    op.drop_table('questions')
    # ### end Alembic commands ###
